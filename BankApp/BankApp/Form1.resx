<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qf8H4581VTnXYEsAAAAASUVORK5CYII=
</value>
  </data>
</root>